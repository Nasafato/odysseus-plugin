import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	platform: "node",
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		// Only exclude core Node.js modules that should remain external
		// "fs",
		// "path",
		// "crypto",
		// "stream",
		// "util",
		// "events",
		// "buffer",
		// "os",
		// "url",
		// "querystring",
		// "http",
		// "https",
		// "zlib",
		// "child_process",
		// "cluster",
		// "dgram",
		// "dns",
		// "domain",
		// "module",
		// "net",
		// "readline",
		// "repl",
		// "string_decoder",
		// "sys",
		// "timers",
		// "tls",
		// "tty",
		// "v8",
		// "vm",
		// "worker_threads"
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod,
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
